了解 Bootarmor
==============

Bootarmor 是以为软件产品提供绝对安全，确保软件产品发布之后，其代码不被
使用者获取或者修改为目标的安全型嵌入式操作系统。

Bootarmor 使用 debian 包的形式提供了一个 Linux 内核，把原来的嵌入式系
统的内核替换为 Bootarmor 提供的内核之后，就升级成为安全操作系统。

Bootarmor 可以直接保护二进制代码文件，例如可执行文件和动态库，对于 C#，
Java，Python 等使用伪代码和虚拟机的语言，通过将解释器编译成为安全应用，
间接的来进行保护。例如对 Python 脚本来说，首先将 Python 解释器使用
Bootarmor 保护起来，然后把 Python 脚本作为数据文件进行加密，最后使用安
全的 Python 解释器来运行加密脚本。通过这种间接的方式来保护 Python 脚本。
对于 Java 也类似，先将 Java 的运行库 jre 使用 Bootarmor 进行保护，然后
把 Java 的 .class 文件直接加密，最后使用安全的 jre 运行加密脚本。对于
C# 和其它脚本语言也类似。

传统的二进制代码保护工具，例如 VMProtect, Themedia 等相比较，它们不管
采用虚拟指令，还是各种方式，都离不开操作系统的制约，无法实现绝对的安全。
并且使用虚拟指令的方式虽然提高了安全性，但是大大降低了性能。

芯片级别的安全性，例如 INTEL® SGX INSTRUCTION 等，需要用户编写专门的程
序来使用这些特性，对于普通用户来说，对代码要进行重整，工作量很大，并且
都需要从厂商获得许可。

而使用虚拟机（VMX） 的方式，对性能的影响则比较大。

Bootarmor 从系统引导开始接手，运行于芯片的最高权限级别，全面接管内存的
管理和分配，然后在次高的权限级别装载并运行 Linux 操作系统，所以其不受
操作系统的制约，可以提供绝对的安全性。

和虚拟机（VMX）的方式相比，Bootarmor 只接管内存，其它任务还交给操作系
统来执行，基本不会对性能产生太大的影响。

Bootarmor 目前分为社区版和企业版两个版本。

.. include:: _common_definitions.txt
